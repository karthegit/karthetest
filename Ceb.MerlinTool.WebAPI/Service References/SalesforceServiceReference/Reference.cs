//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ceb.MerlinTool.WebAPI.SalesforceServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Program", Namespace="http://schemas.datacontract.org/2004/07/CEB.Salesforce.Core.Models")]
    [System.SerializableAttribute()]
    public partial class Program : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CEBIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice PracticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebUniqueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CEBId {
            get {
                return this.CEBIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CEBIdField, value) != true)) {
                    this.CEBIdField = value;
                    this.RaisePropertyChanged("CEBId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice Practice {
            get {
                return this.PracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeField, value) != true)) {
                    this.PracticeField = value;
                    this.RaisePropertyChanged("Practice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramCode {
            get {
                return this.ProgramCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramCodeField, value) != true)) {
                    this.ProgramCodeField = value;
                    this.RaisePropertyChanged("ProgramCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramIdField, value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramName {
            get {
                return this.ProgramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameField, value) != true)) {
                    this.ProgramNameField = value;
                    this.RaisePropertyChanged("ProgramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebUniqueId {
            get {
                return this.WebUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WebUniqueIdField, value) != true)) {
                    this.WebUniqueIdField = value;
                    this.RaisePropertyChanged("WebUniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Practice", Namespace="http://schemas.datacontract.org/2004/07/CEB.Salesforce.Core.Models")]
    [System.SerializableAttribute()]
    public partial class Practice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PracticeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PracticeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PracticeCode {
            get {
                return this.PracticeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeCodeField, value) != true)) {
                    this.PracticeCodeField = value;
                    this.RaisePropertyChanged("PracticeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PracticeName {
            get {
                return this.PracticeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeNameField, value) != true)) {
                    this.PracticeNameField = value;
                    this.RaisePropertyChanged("PracticeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Institution", Namespace="http://schemas.datacontract.org/2004/07/CEB.Salesforce.Core.Models")]
    [System.SerializableAttribute()]
    public partial class Institution : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AnnualRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CEBIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalParentCEBIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlobalParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfEmployeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NumberOfMarketersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebUniqueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AnnualRevenue {
            get {
                return this.AnnualRevenueField;
            }
            set {
                if ((this.AnnualRevenueField.Equals(value) != true)) {
                    this.AnnualRevenueField = value;
                    this.RaisePropertyChanged("AnnualRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CEBId {
            get {
                return this.CEBIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CEBIdField, value) != true)) {
                    this.CEBIdField = value;
                    this.RaisePropertyChanged("CEBId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalParentCEBId {
            get {
                return this.GlobalParentCEBIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalParentCEBIdField, value) != true)) {
                    this.GlobalParentCEBIdField = value;
                    this.RaisePropertyChanged("GlobalParentCEBId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalParentId {
            get {
                return this.GlobalParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalParentIdField, value) != true)) {
                    this.GlobalParentIdField = value;
                    this.RaisePropertyChanged("GlobalParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlobalParentName {
            get {
                return this.GlobalParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalParentNameField, value) != true)) {
                    this.GlobalParentNameField = value;
                    this.RaisePropertyChanged("GlobalParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfEmployees {
            get {
                return this.NumberOfEmployeesField;
            }
            set {
                if ((this.NumberOfEmployeesField.Equals(value) != true)) {
                    this.NumberOfEmployeesField = value;
                    this.RaisePropertyChanged("NumberOfEmployees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> NumberOfMarketers {
            get {
                return this.NumberOfMarketersField;
            }
            set {
                if ((this.NumberOfMarketersField.Equals(value) != true)) {
                    this.NumberOfMarketersField = value;
                    this.RaisePropertyChanged("NumberOfMarketers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebUniqueId {
            get {
                return this.WebUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WebUniqueIdField, value) != true)) {
                    this.WebUniqueIdField = value;
                    this.RaisePropertyChanged("WebUniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SARoles", Namespace="http://schemas.datacontract.org/2004/07/CEB.Salesforce.Core.Dto")]
    [System.SerializableAttribute()]
    public partial class SARoles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ceb.MerlinTool.WebAPI.SalesforceServiceReference.ServiceAccessRole[] ServiceAccessRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.ServiceAccessRole[] ServiceAccessRoles {
            get {
                return this.ServiceAccessRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAccessRolesField, value) != true)) {
                    this.ServiceAccessRolesField = value;
                    this.RaisePropertyChanged("ServiceAccessRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAccessRole", Namespace="http://schemas.datacontract.org/2004/07/CEB.Salesforce.Core.Models")]
    [System.SerializableAttribute()]
    public partial class ServiceAccessRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContacEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberAdminTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SARoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAccessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAccessRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAccessStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessLevelField, value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContacEmail {
            get {
                return this.ContacEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContacEmailField, value) != true)) {
                    this.ContacEmailField = value;
                    this.RaisePropertyChanged("ContacEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactStatus {
            get {
                return this.ContactStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactStatusField, value) != true)) {
                    this.ContactStatusField = value;
                    this.RaisePropertyChanged("ContactStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberAdminType {
            get {
                return this.MemberAdminTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberAdminTypeField, value) != true)) {
                    this.MemberAdminTypeField = value;
                    this.RaisePropertyChanged("MemberAdminType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleStatus {
            get {
                return this.RoleStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleStatusField, value) != true)) {
                    this.RoleStatusField = value;
                    this.RaisePropertyChanged("RoleStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SARole {
            get {
                return this.SARoleField;
            }
            set {
                if ((object.ReferenceEquals(this.SARoleField, value) != true)) {
                    this.SARoleField = value;
                    this.RaisePropertyChanged("SARole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAccessName {
            get {
                return this.ServiceAccessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAccessNameField, value) != true)) {
                    this.ServiceAccessNameField = value;
                    this.RaisePropertyChanged("ServiceAccessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAccessRoleId {
            get {
                return this.ServiceAccessRoleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAccessRoleIdField, value) != true)) {
                    this.ServiceAccessRoleIdField = value;
                    this.RaisePropertyChanged("ServiceAccessRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAccessStatus {
            get {
                return this.ServiceAccessStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAccessStatusField, value) != true)) {
                    this.ServiceAccessStatusField = value;
                    this.RaisePropertyChanged("ServiceAccessStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionId {
            get {
                return this.SubscriptionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionIdField, value) != true)) {
                    this.SubscriptionIdField = value;
                    this.RaisePropertyChanged("SubscriptionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/CEB.Salesforce.Core.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CEBIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution InstitutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebUniqueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CEBId {
            get {
                return this.CEBIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CEBIdField, value) != true)) {
                    this.CEBIdField = value;
                    this.RaisePropertyChanged("CEBId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution Institution {
            get {
                return this.InstitutionField;
            }
            set {
                if ((object.ReferenceEquals(this.InstitutionField, value) != true)) {
                    this.InstitutionField = value;
                    this.RaisePropertyChanged("Institution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebUniqueId {
            get {
                return this.WebUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WebUniqueIdField, value) != true)) {
                    this.WebUniqueIdField = value;
                    this.RaisePropertyChanged("WebUniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Opportunity", Namespace="http://schemas.datacontract.org/2004/07/CEB.Salesforce.Core.Models")]
    [System.SerializableAttribute()]
    public partial class Opportunity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ActiveServiceAccessRolesNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution InstitutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LicensedUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpportunityOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program ProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceAccessEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAccessGroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceAccessStartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ActiveServiceAccessRolesNumber {
            get {
                return this.ActiveServiceAccessRolesNumberField;
            }
            set {
                if ((this.ActiveServiceAccessRolesNumberField.Equals(value) != true)) {
                    this.ActiveServiceAccessRolesNumberField = value;
                    this.RaisePropertyChanged("ActiveServiceAccessRolesNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution Institution {
            get {
                return this.InstitutionField;
            }
            set {
                if ((object.ReferenceEquals(this.InstitutionField, value) != true)) {
                    this.InstitutionField = value;
                    this.RaisePropertyChanged("Institution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LicensedUsers {
            get {
                return this.LicensedUsersField;
            }
            set {
                if ((this.LicensedUsersField.Equals(value) != true)) {
                    this.LicensedUsersField = value;
                    this.RaisePropertyChanged("LicensedUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpportunityOwner {
            get {
                return this.OpportunityOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OpportunityOwnerField, value) != true)) {
                    this.OpportunityOwnerField = value;
                    this.RaisePropertyChanged("OpportunityOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program Program {
            get {
                return this.ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramField, value) != true)) {
                    this.ProgramField = value;
                    this.RaisePropertyChanged("Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServiceAccessEndDate {
            get {
                return this.ServiceAccessEndDateField;
            }
            set {
                if ((this.ServiceAccessEndDateField.Equals(value) != true)) {
                    this.ServiceAccessEndDateField = value;
                    this.RaisePropertyChanged("ServiceAccessEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAccessGroupNumber {
            get {
                return this.ServiceAccessGroupNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAccessGroupNumberField, value) != true)) {
                    this.ServiceAccessGroupNumberField = value;
                    this.RaisePropertyChanged("ServiceAccessGroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServiceAccessStartDate {
            get {
                return this.ServiceAccessStartDateField;
            }
            set {
                if ((this.ServiceAccessStartDateField.Equals(value) != true)) {
                    this.ServiceAccessStartDateField = value;
                    this.RaisePropertyChanged("ServiceAccessStartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SalesforceServiceReference.ISalesforceWebService")]
    public interface ISalesforceWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetPrograms", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramsResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[] GetPrograms(bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetPrograms", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramsResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[]> GetProgramsAsync(bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramByCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramByCodeResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program GetProgramByCode(string programCode, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramByCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramByCodeResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program> GetProgramByCodeAsync(string programCode, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramByCEBId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramByCEBIdResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program GetProgramByCEBId(string programCEBId, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramByCEBId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramByCEBIdResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program> GetProgramByCEBIdAsync(string programCEBId, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramsByPracticeCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramsByPracticeCodeResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[] GetProgramsByPracticeCode(string practiceCode, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramsByPracticeCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramsByPracticeCodeResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[]> GetProgramsByPracticeCodeAsync(string practiceCode, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramsByInstitutionID", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramsByInstitutionIDResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[] GetProgramsByInstitutionID(string institutionCEBId, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetProgramsByInstitutionID", ReplyAction="http://tempuri.org/ISalesforceWebService/GetProgramsByInstitutionIDResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[]> GetProgramsByInstitutionIDAsync(string institutionCEBId, bool includeParentPractice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetInstitutionByCEBId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetInstitutionByCEBIdResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution GetInstitutionByCEBId(string institutionCEBId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetInstitutionByCEBId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetInstitutionByCEBIdResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution> GetInstitutionByCEBIdAsync(string institutionCEBId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByCEBId", ReplyAction="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByCEBIdResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] SearchInstitutionsByCEBId(string[] institutionCEBIds, System.Nullable<bool> fetchInstitutionAdditionalData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByCEBId", ReplyAction="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByCEBIdResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> SearchInstitutionsByCEBIdAsync(string[] institutionCEBIds, System.Nullable<bool> fetchInstitutionAdditionalData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByName", ReplyAction="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByNameResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] SearchInstitutionsByName(string institutionNameSearchString, System.Nullable<bool> fetchInstitutionAdditionalData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByName", ReplyAction="http://tempuri.org/ISalesforceWebService/SearchInstitutionsByNameResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> SearchInstitutionsByNameAsync(string institutionNameSearchString, System.Nullable<bool> fetchInstitutionAdditionalData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetActiveInstitutions", ReplyAction="http://tempuri.org/ISalesforceWebService/GetActiveInstitutionsResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetActiveInstitutions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetActiveInstitutions", ReplyAction="http://tempuri.org/ISalesforceWebService/GetActiveInstitutionsResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetActiveInstitutionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetAllInstitutions", ReplyAction="http://tempuri.org/ISalesforceWebService/GetAllInstitutionsResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetAllInstitutions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetAllInstitutions", ReplyAction="http://tempuri.org/ISalesforceWebService/GetAllInstitutionsResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetAllInstitutionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetInstitutions", ReplyAction="http://tempuri.org/ISalesforceWebService/GetInstitutionsResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetInstitutions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetInstitutions", ReplyAction="http://tempuri.org/ISalesforceWebService/GetInstitutionsResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetInstitutionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetInstitutionsByProgramCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetInstitutionsByProgramCodeResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetInstitutionsByProgramCode(string programCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetInstitutionsByProgramCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetInstitutionsByProgramCodeResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetInstitutionsByProgramCodeAsync(string programCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetServiceAccessRoleBySubscriptionId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetServiceAccessRoleBySubscriptionIdResp" +
            "onse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.SARoles GetServiceAccessRoleBySubscriptionId(string subscriptionId, int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetServiceAccessRoleBySubscriptionId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetServiceAccessRoleBySubscriptionIdResp" +
            "onse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.SARoles> GetServiceAccessRoleBySubscriptionIdAsync(string subscriptionId, int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetUserByEmail", ReplyAction="http://tempuri.org/ISalesforceWebService/GetUserByEmailResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User GetUserByEmail(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetUserByEmail", ReplyAction="http://tempuri.org/ISalesforceWebService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User> GetUserByEmailAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetUsersDetailsByInstitutionId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetUsersDetailsByInstitutionIdResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User[] GetUsersDetailsByInstitutionId(string institutionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetUsersDetailsByInstitutionId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetUsersDetailsByInstitutionIdResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User[]> GetUsersDetailsByInstitutionIdAsync(string institutionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetUsersByInstitutionId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetUsersByInstitutionIdResponse")]
        string[] GetUsersByInstitutionId(string institutionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetUsersByInstitutionId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetUsersByInstitutionIdResponse")]
        System.Threading.Tasks.Task<string[]> GetUsersByInstitutionIdAsync(string institutionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetOpportunity", ReplyAction="http://tempuri.org/ISalesforceWebService/GetOpportunityResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity GetOpportunity(string productCode, string institutionId, System.DateTime reportGenerationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetOpportunity", ReplyAction="http://tempuri.org/ISalesforceWebService/GetOpportunityResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity> GetOpportunityAsync(string productCode, string institutionId, System.DateTime reportGenerationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetOpportunityByOpportunityCRMId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetOpportunityByOpportunityCRMIdResponse" +
            "")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity GetOpportunityByOpportunityCRMId(string opportunityCRMId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetOpportunityByOpportunityCRMId", ReplyAction="http://tempuri.org/ISalesforceWebService/GetOpportunityByOpportunityCRMIdResponse" +
            "")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity> GetOpportunityByOpportunityCRMIdAsync(string opportunityCRMId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetPractices", ReplyAction="http://tempuri.org/ISalesforceWebService/GetPracticesResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice[] GetPractices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetPractices", ReplyAction="http://tempuri.org/ISalesforceWebService/GetPracticesResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice[]> GetPracticesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetPracticeByCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetPracticeByCodeResponse")]
        Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice GetPracticeByCode(string practiceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceWebService/GetPracticeByCode", ReplyAction="http://tempuri.org/ISalesforceWebService/GetPracticeByCodeResponse")]
        System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice> GetPracticeByCodeAsync(string practiceCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesforceWebServiceChannel : Ceb.MerlinTool.WebAPI.SalesforceServiceReference.ISalesforceWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesforceWebServiceClient : System.ServiceModel.ClientBase<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.ISalesforceWebService>, Ceb.MerlinTool.WebAPI.SalesforceServiceReference.ISalesforceWebService {
        
        public SalesforceWebServiceClient() {
        }
        
        public SalesforceWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesforceWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[] GetPrograms(bool includeParentPractice) {
            return base.Channel.GetPrograms(includeParentPractice);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[]> GetProgramsAsync(bool includeParentPractice) {
            return base.Channel.GetProgramsAsync(includeParentPractice);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program GetProgramByCode(string programCode, bool includeParentPractice) {
            return base.Channel.GetProgramByCode(programCode, includeParentPractice);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program> GetProgramByCodeAsync(string programCode, bool includeParentPractice) {
            return base.Channel.GetProgramByCodeAsync(programCode, includeParentPractice);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program GetProgramByCEBId(string programCEBId, bool includeParentPractice) {
            return base.Channel.GetProgramByCEBId(programCEBId, includeParentPractice);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program> GetProgramByCEBIdAsync(string programCEBId, bool includeParentPractice) {
            return base.Channel.GetProgramByCEBIdAsync(programCEBId, includeParentPractice);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[] GetProgramsByPracticeCode(string practiceCode, bool includeParentPractice) {
            return base.Channel.GetProgramsByPracticeCode(practiceCode, includeParentPractice);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[]> GetProgramsByPracticeCodeAsync(string practiceCode, bool includeParentPractice) {
            return base.Channel.GetProgramsByPracticeCodeAsync(practiceCode, includeParentPractice);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[] GetProgramsByInstitutionID(string institutionCEBId, bool includeParentPractice) {
            return base.Channel.GetProgramsByInstitutionID(institutionCEBId, includeParentPractice);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Program[]> GetProgramsByInstitutionIDAsync(string institutionCEBId, bool includeParentPractice) {
            return base.Channel.GetProgramsByInstitutionIDAsync(institutionCEBId, includeParentPractice);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution GetInstitutionByCEBId(string institutionCEBId) {
            return base.Channel.GetInstitutionByCEBId(institutionCEBId);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution> GetInstitutionByCEBIdAsync(string institutionCEBId) {
            return base.Channel.GetInstitutionByCEBIdAsync(institutionCEBId);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] SearchInstitutionsByCEBId(string[] institutionCEBIds, System.Nullable<bool> fetchInstitutionAdditionalData) {
            return base.Channel.SearchInstitutionsByCEBId(institutionCEBIds, fetchInstitutionAdditionalData);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> SearchInstitutionsByCEBIdAsync(string[] institutionCEBIds, System.Nullable<bool> fetchInstitutionAdditionalData) {
            return base.Channel.SearchInstitutionsByCEBIdAsync(institutionCEBIds, fetchInstitutionAdditionalData);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] SearchInstitutionsByName(string institutionNameSearchString, System.Nullable<bool> fetchInstitutionAdditionalData) {
            return base.Channel.SearchInstitutionsByName(institutionNameSearchString, fetchInstitutionAdditionalData);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> SearchInstitutionsByNameAsync(string institutionNameSearchString, System.Nullable<bool> fetchInstitutionAdditionalData) {
            return base.Channel.SearchInstitutionsByNameAsync(institutionNameSearchString, fetchInstitutionAdditionalData);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetActiveInstitutions() {
            return base.Channel.GetActiveInstitutions();
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetActiveInstitutionsAsync() {
            return base.Channel.GetActiveInstitutionsAsync();
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetAllInstitutions() {
            return base.Channel.GetAllInstitutions();
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetAllInstitutionsAsync() {
            return base.Channel.GetAllInstitutionsAsync();
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetInstitutions() {
            return base.Channel.GetInstitutions();
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetInstitutionsAsync() {
            return base.Channel.GetInstitutionsAsync();
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[] GetInstitutionsByProgramCode(string programCode) {
            return base.Channel.GetInstitutionsByProgramCode(programCode);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Institution[]> GetInstitutionsByProgramCodeAsync(string programCode) {
            return base.Channel.GetInstitutionsByProgramCodeAsync(programCode);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.SARoles GetServiceAccessRoleBySubscriptionId(string subscriptionId, int index) {
            return base.Channel.GetServiceAccessRoleBySubscriptionId(subscriptionId, index);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.SARoles> GetServiceAccessRoleBySubscriptionIdAsync(string subscriptionId, int index) {
            return base.Channel.GetServiceAccessRoleBySubscriptionIdAsync(subscriptionId, index);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User GetUserByEmail(string emailAddress) {
            return base.Channel.GetUserByEmail(emailAddress);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User> GetUserByEmailAsync(string emailAddress) {
            return base.Channel.GetUserByEmailAsync(emailAddress);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User[] GetUsersDetailsByInstitutionId(string institutionId) {
            return base.Channel.GetUsersDetailsByInstitutionId(institutionId);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.User[]> GetUsersDetailsByInstitutionIdAsync(string institutionId) {
            return base.Channel.GetUsersDetailsByInstitutionIdAsync(institutionId);
        }
        
        public string[] GetUsersByInstitutionId(string institutionId) {
            return base.Channel.GetUsersByInstitutionId(institutionId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUsersByInstitutionIdAsync(string institutionId) {
            return base.Channel.GetUsersByInstitutionIdAsync(institutionId);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity GetOpportunity(string productCode, string institutionId, System.DateTime reportGenerationDate) {
            return base.Channel.GetOpportunity(productCode, institutionId, reportGenerationDate);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity> GetOpportunityAsync(string productCode, string institutionId, System.DateTime reportGenerationDate) {
            return base.Channel.GetOpportunityAsync(productCode, institutionId, reportGenerationDate);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity GetOpportunityByOpportunityCRMId(string opportunityCRMId) {
            return base.Channel.GetOpportunityByOpportunityCRMId(opportunityCRMId);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Opportunity> GetOpportunityByOpportunityCRMIdAsync(string opportunityCRMId) {
            return base.Channel.GetOpportunityByOpportunityCRMIdAsync(opportunityCRMId);
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice[] GetPractices() {
            return base.Channel.GetPractices();
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice[]> GetPracticesAsync() {
            return base.Channel.GetPracticesAsync();
        }
        
        public Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice GetPracticeByCode(string practiceCode) {
            return base.Channel.GetPracticeByCode(practiceCode);
        }
        
        public System.Threading.Tasks.Task<Ceb.MerlinTool.WebAPI.SalesforceServiceReference.Practice> GetPracticeByCodeAsync(string practiceCode) {
            return base.Channel.GetPracticeByCodeAsync(practiceCode);
        }
    }
}
